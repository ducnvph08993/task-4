{"version":3,"sources":["components/Header/index.jsx","components/Footer/index.jsx","components/Sidebar/index.jsx","pages/views/Employees/index.jsx","redux/actionTypes.js","redux/actions/employeeActions.js","pages/views/AddEmployee/index.jsx","routers/index.jsx","redux/reducers/employees.js","redux/reducers/inputs.js","redux/reducers/index.js","redux/createStore.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Title","Typography","HeaderMain","style","padding","size","float","icon","UserOutlined","color","level","Footer","FooterMain","textAlign","Sider","SiderBar","defaultSelectedKeys","mode","Item","key","to","DashboardOutlined","title","TeamOutlined","ItemGroup","UserAddOutlined","Employees","employees","useSelector","state","columns","dataIndex","render","text","href","record","name","margin","dataSource","employee","type","actionTypes","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","onFinish","values","console","log","AddEmployee","inputs","age","address","dispatch","useDispatch","Form","setFieldsValue","className","id","label","rules","min","max","offset","htmlType","onClick","employeeActions","Content","Routers","path","exact","initialState","combineReducers","action","push","index","createStore","rootReducers","App","store","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a1b317a.chunk.js","sourcesContent":["import { UserOutlined } from \"@ant-design/icons\";\r\nimport { Layout, Typography } from \"antd\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport React from \"react\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst { Title } = Typography;\r\n\r\nconst HeaderMain = () => {\r\n  return (\r\n    <Header style={{ padding: 10 }}>\r\n      <Avatar\r\n        size={\"large\"}\r\n        style={{ float: \"right\" }}\r\n        icon={<UserOutlined />}\r\n      />\r\n      <Title style={{ color: \"white\" }} level={2}>\r\n        Admin\r\n      </Title>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import { Layout } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst FooterMain = () => {\r\n  return (\r\n    <Footer style={{ textAlign: \"center\" }}>\r\n      Ant Design Â©2018 Created by Ant UED\r\n    </Footer>\r\n  );\r\n};\r\n\r\nexport default FooterMain;\r\n","import {\r\n  DashboardOutlined,\r\n  TeamOutlined,\r\n  UserAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst SiderBar = () => {\r\n  return (\r\n    <Sider>\r\n      <Menu defaultSelectedKeys={[\"Dashboard\"]} mode=\"inline\">\r\n        <Menu.Item key=\"Dashboard\">\r\n          <Link to=\"/\">\r\n            <DashboardOutlined />\r\n            Dashboard\r\n          </Link>\r\n        </Menu.Item>\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          title={\r\n            <span>\r\n              <TeamOutlined />\r\n              <span>Employees</span>\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.ItemGroup key=\"interact\" title=\"Interact\">\r\n            <Menu.Item key=\"add\">\r\n              <UserAddOutlined />\r\n              <Link to=\"/add\">Add</Link>\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default SiderBar;\r\n","import React from \"react\";\r\nimport { Breadcrumb, Space, Table, Tag } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Employees = () => {\r\n\r\n  const employees = useSelector(state => state.employees.employees);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render:text => <a href=\"/#\">{text}</a>\r\n    },\r\n    {\r\n      title: 'Age',\r\n      dataIndex: 'age',\r\n      key: 'age'\r\n    },\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      key: 'address'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text,record) => (\r\n        <Space size=\"middle\">\r\n          <a href=\"/#\">Invite {record.name}</a>\r\n          <a href=\"/#\">Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n        <Breadcrumb.Item>Table</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Table columns={columns} dataSource={employees} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n  // component={ () =>  <Employees employees={employees}/> }","export default {\r\n    ADD_EMPLOYEE: 'ADD_EMPLOYEE',\r\n    DELETE_EMPLOYEE: 'DELETE_EMPLOYEE',\r\n    UPDATE_EMPLOYEE: 'UPDATE_EMPLOYEE',\r\n\r\n    SET_INPUT_NAME: 'SET_INPUT_NAME',\r\n    SET_INPUT_AGE: 'SET_INPUT_AGE',\r\n    SET_INPUT_ADDRESS: 'SET_INPUT_ADDRESS',\r\n    SET_INPUT_TAGS: 'SET_INPUT_TAGS',\r\n    RESET_INPUT: 'RESET_INPUT',\r\n}","import actionTypes from '../actionTypes';\r\n\r\nexport default {\r\n    addEmployee: (employee) => ({\r\n        type: actionTypes.ADD_EMPLOYEE,\r\n        employee,\r\n    }),\r\n    updateEmployee: (index, employee) => ({\r\n        type: actionTypes.UPDATE_EMPLOYEE,\r\n        employee,\r\n        index,\r\n    }),\r\n    deleteEmployee: (index) => ({\r\n        type: actionTypes.DELETE_EMPLOYEE,\r\n        index,\r\n    })\r\n}","import React from \"react\";\r\nimport { Form, Input, InputNumber, Button, Typography } from 'antd';\r\nimport './AddEmployee.scss';\r\nimport noteActions from '../../../redux/actions/employeeActions';\r\nimport inputActions from '../../../redux/actions/inputActions';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport employeeActions from \"../../../redux/actions/employeeActions\";\r\n// import PropTypes from 'prop-types'\r\n\r\nconst {Title} = Typography\r\n\r\nconst layout = {\r\n  labelCol : {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  }\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '\\${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email',\r\n    number: '${label} is not validate number',\r\n  },\r\n  number: {\r\n    number: '${label} must be between ${min} to ${max}'\r\n  },\r\n};\r\n\r\nconst onFinish = values => console.log(values);\r\n\r\nconst AddEmployee = () => {\r\n  const name = useSelector(state => state.inputs.name);\r\n  const age = useSelector(state => state.inputs.age);\r\n  const address = useSelector(state => state.inputs.address);\r\n  const dispatch = useDispatch();\r\n  const form = Form();\r\n\r\n  form.setFieldsValue({employees:{\r\n    name: name,\r\n    age: age,\r\n    address:address,\r\n  \r\n  }})\r\n \r\n\r\n  const handleAdd = () => {\r\n    dispatch(employeeActions.addEmployee({\r\n      name,\r\n      age,\r\n      address,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-form\">\r\n     <Title id=\"title\">Add-Employee</Title>\r\n    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n      <Form.Item\r\n        name={['employees','name']}\r\n        label=\"Name\"\r\n        rules = {[\r\n          {\r\n            required:true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input  />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={['employees','email']}\r\n        label=\"Email\"\r\n        rules = {[\r\n          {\r\n            type:'email',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={['employees','age']}\r\n        label=\"Age\"\r\n        rules = {[\r\n          {\r\n            type:'number',\r\n            min: 0,\r\n            max: 99,\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{...layout.wrapperCol, offset: 10}}>\r\n        <Button type=\"primary\" htmlType=\"submit\" onClick={handleAdd}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddEmployee.propTypes = {};\r\n\r\nexport default AddEmployee;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport SiderBar from \"../components/Sidebar\";\r\nimport { Layout } from \"antd\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Employees from \"../pages/views/Employees\";\r\nimport AddEmployee from \"../pages/views/AddEmployee\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst Routers = ({employees}) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Layout>\r\n        <Header />\r\n        <Layout>\r\n          <SiderBar />\r\n          <Layout>\r\n            <Content style={{ padding: \"0 50px\"}}>\r\n              <Switch>\r\n                <Route\r\n                  path=\"/\"\r\n                  exact\r\n                >\r\n                  <Employees employees={employees}/>\r\n                </Route>\r\n                <Route\r\n                  path=\"/add\"\r\n                >\r\n                  <AddEmployee />\r\n                </Route>\r\n              </Switch>\r\n            </Content>\r\n            <Footer />\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routers;\r\n","import actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n    employees: [\r\n        {\r\n            key: '1',\r\n            name: 'John Brown',\r\n            age: 32,\r\n            address: 'New York No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '2',\r\n            name: 'Jim Green',\r\n            age: 42,\r\n            address: 'London No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '3',\r\n            name: 'Joe Black',\r\n            age: 32,\r\n            address: 'Sidney No. 1 Lake Park',\r\n        },\r\n    ]\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_EMPLOYEE: {\r\n            const employees = [...state.employees];\r\n            employees.push(state.employee);\r\n            return {\r\n                employees,\r\n            }\r\n        };\r\n        case actionTypes.UPDATE_EMPLOYEE: {\r\n            const { index, employee } = action;\r\n            const employees = [...state.employees];\r\n            employees[index] = employee;\r\n            return {\r\n                employees,\r\n            }\r\n        };\r\n        case actionTypes.DELETE_EMPLOYEE: {\r\n            const { index } = action;\r\n            const employees = state.employees\r\n            delete employees[index];\r\n            return {\r\n                employees,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    age: '',\r\n    address: '',\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_INPUT_NAME: {\r\n            const { name } = action;\r\n            return {\r\n                ...state,\r\n                name,\r\n            }\r\n        }\r\n        case actionTypes.SET_INPUT_AGE: {\r\n            const { age } = action;\r\n            return {\r\n                ...state,\r\n                age,\r\n            }\r\n        }\r\n        case actionTypes.SET_INPUT_ADDRESS: {\r\n            const { address } = action;\r\n            return {\r\n                ...state,\r\n                address,\r\n            }\r\n        }\r\n        case actionTypes.RESET_INPUT: {\r\n            return initialState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport employees from './employees';\r\nimport inputs from './inputs';\r\n\r\nexport default combineReducers({\r\n    employees,\r\n    inputs,\r\n})","import { createStore } from 'redux';\r\nimport rootReducers from './reducers';\r\n\r\nexport default createStore(rootReducers);","import React from 'react';\nimport './App.css';\nimport Routers from './routers';\nimport store from './redux/createStore';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  // const [employees, setEmployees] = useState(\n  //   [\n  //     {\n  //       key: '1',\n  //       name: 'John Brown',\n  //       age: 32,\n  //       address: 'New York No. 1 Lake Park',\n  //       tags: ['nice', 'developer'],\n  //     },\n  //     {\n  //       key: '2',\n  //       name: 'Jim Green',\n  //       age: 42,\n  //       address: 'London No. 1 Lake Park',\n  //       tags: ['loser'],\n  //     },\n  //     {\n  //       key: '3',\n  //       name: 'Joe Black',\n  //       age: 32,\n  //       address: 'Sidney No. 1 Lake Park',\n  //       tags: ['cool', 'teacher'],\n  //     },\n  //   ]\n  // );\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Routers />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}